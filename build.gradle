plugins {
    id 'org.jetbrains.kotlin.jvm' version "$version_kotlin"
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

group = 'de.axelrindle'
version = '2.3.1'

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}
compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://jitpack.io" }
    maven { url "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
}

configurations {
    testImplementation.extendsFrom compileOnly
}

dependencies {
    implementation 'com.github.axelrindle:PocketKnife:2.2.0'

    // APIs
    compileOnly "org.spigotmc:spigot-api:$version_spigot"
    compileOnly 'me.clip:placeholderapi:2.10.3'
    compileOnly ("com.github.MilkBowl:VaultAPI:1.7") {
        exclude group: "org.bukkit", module: "bukkit"
    }

    // Tests
    testImplementation "io.kotest:kotest-runner-junit5-jvm:$version_kotest"
    testImplementation "io.kotest:kotest-assertions-core-jvm:$version_kotest"
    testImplementation group: "org.slf4j", name: "slf4j-simple", version: "1.7.25"
    testImplementation "com.github.seeseemelk:MockBukkit-v1.16:1.0.0"
}

processResources {
    filter { line ->
        line.replaceAll("@VERSION@", project.version.toString())
    }
}

task copyToServer(type: Copy) {
    def dir = System.getenv("PLUGINS_DIR")
    if (dir == null) return true

    from("build/libs") {
        include "${project.name}-${project.version}.jar"
    }
    into dir
}

shadowJar {
    archiveClassifier.set('')

    finalizedBy copyToServer
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation
task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "broadcastershadow"
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.required = false
    }
}